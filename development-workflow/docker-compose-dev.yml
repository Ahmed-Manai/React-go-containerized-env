## use this site "https://www.composerize.com/" to convert from docker-run to docker-compose 

services:
  client-react-vite:
    image: client-react-vite
    build:
      context: ../client-react/
      dockerfile: ../client-react/Dockerfile-react-vite
    init: true
    volumes:
      - type: bind 
        source: ../client-react/
        target: /usr/src/app/
      - type: volume
        target: /use/src/app/node_modules
      - type: bind
        source: ../client-react/vite.config.js
        target: /usr/src/app/vite.config.js
    networks:
      - frontend
    ports:
      - 5173:5173


  client-react-nginx:
    labels:
      shipyard.primary-route: true
      shipyard.route: '/'
    image: client-react-nginx
    build:
      context: ../client-react/
      dockerfile: ../client-react/Dockerfile-react-ngnix
    init: true
    networks:
      - frontend
    ports:
      - 80:8080
    restart: unless-stopped


  api-node:
    labels:
      shipyard.route: '/api/node/'
      shipyard.route.rewrite: true
    image: api-node77
    build:
      context: ../api-node/
      dockerfile: ../api-node/Dockerfile-api-node
      target: dev
    init: true
    volumes:
      - type: bind
        source: ../api-node/
        target: /usr/src/app/
      - type: volume
        target: /usr/src/app/node_modules 
    depends_on:
      - db
    environment:
      - DATABASE_URL=postgres://postgres:ahmed@db:5432/postgres
    networks:
      - frontend
      - backend
    ports:
      - 3000:3000
    restart: unless-stopped


  api-golang:
    labels:
      shipyard.route: '/api/golang/'
      shipyard.route.rewrite: true
    image: api-golang
    build:
      context: ../api-golang/
      dockerfile: ../api-golang/Dockerfile-api-golang
      target: dev
    init: true
    volumes:
      - type: bind
        source: ../api-golang/
        target: /app/
    depends_on:
      - db
    environment:
      - DATABASE_URL=postgres://postgres:ahmed@db:5432/postgres
    networks:
      - frontend
      - backend
    ports:
      - 8080:8080
    restart: unless-stopped


  db:
    image: postgres:15.1-alpine
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=ahmed
    networks:
      - backend
    ports:
      - 5432:5432


volumes:
  pgdata:


networks:
  frontend:
  backend: